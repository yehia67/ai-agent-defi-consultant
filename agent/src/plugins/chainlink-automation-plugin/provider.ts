import { ethers } from 'ethers';
import { logger } from '@elizaos/core';
import { AVALANCHE_FUJI_CONFIG } from '../../configs/networks';

// ABI for the Chainlink Automation Registry
const CHAINLINK_REGISTRY_ABI = [
  "function registerUpkeep(address target, uint32 gasLimit, address admin, bytes checkData, bytes encryptedEmail) external returns (uint256)",
  "function addFunds(uint256 id, uint96 amount) external",
  "function getUpkeep(uint256 id) external view returns (address target, uint32 executeGas, bytes memory checkData, uint96 balance, address lastKeeper, address admin, uint64 maxValidBlocknumber, uint96 amountSpent, bool paused)"
];

// ABI for the ScheduledTransfer contract
const SCHEDULED_TRANSFER_ABI = [
  "function createScheduledTransfer(address recipient, uint256 amount, uint256 startTime, uint256 frequency) external returns (uint256)",
  "function checkUpkeep(bytes calldata checkData) external view returns (bool upkeepNeeded, bytes memory performData)",
  "function performUpkeep(bytes calldata performData) external",
  "function claim() external"
];

// Bytecode for the ScheduledTransfer contract
const SCHEDULED_TRANSFER_BYTECODE = "0x608060405234801561001057600080fd5b50604051610a7e380380610a7e83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6109eb806100936000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633668f29a146100675780633b2bcbf11461007c57806341db4ca31461008f5780634585e33b146100a25780634e71d92d146100b55780639fa6dd35146100bd575b600080fd5b61007a610075366004610772565b6100d0565b005b61007a61008a3660046107c8565b610225565b61007a61009d366004610772565b6102c0565b61007a6100b0366004610805565b610377565b61007a6104a1565b61007a6100cb366004610772565b610502565b6000546001600160a01b031633146101255760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201526330b21760e11b606482015260840160405180910390fd5b6000828152600160205260409020600301544210156101845760405162461bcd60e51b815260206004820152601d60248201527f5472616e73666572206e6f742079657420726561647920746f2073656e640000604482015260640160405180910390fd5b6000828152600160205260409020600501546101e15760405162461bcd60e51b815260206004820152601860248201527f5472616e73666572206973206e6f74207363686564756c6564000000000000006044820152606401610117565b6000828152600160205260409020610221906001600160a01b03163382610563565b5050565b6000546001600160a01b0316331461027a5760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201526330b21760e11b6064820152608401610117565b600083815260016020526040902060050154156102d95760405162461bcd60e51b815260206004820152601560248201527f5472616e7366657220616c72656164792065786973747300000000000000000060448201526064016101175b6102e6600086868661059c565b600084815260016020819052604090912060058101805460ff191690911790556102e6565b6000546001600160a01b031633146103155760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201526330b21760e11b6064820152608401610117565b6000828152600160205260409020600301544210156103745760405162461bcd60e51b815260206004820152601d60248201527f5472616e73666572206e6f742079657420726561647920746f2073656e640000604482015260640160405180910390fd5b50565b60008060006103858585610652565b9150915081610396576103968585610652565b6000808080806103a78a8a610652565b935093509350935060008481526001602081905260409091206003810154600490920154429290916103d99190610877565b10156103e657506104995b60008581526001602081905260409091206003810154600490920154429290916104109190610877565b1115610420576001945061042a565b6000945061042a565b5050505050565b801561049957600083815260016020819052604090912060058101805460ff191690911790556104996001600160a01b03831682846106c9565b505050505050565b6000546001600160a01b031633146104f65760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201526330b21760e11b6064820152608401610117565b6104ff33610502565b565b6000546001600160a01b031633146105575760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60448201526330b21760e11b6064820152608401610117565b610560816106e8565b50565b6040516001600160a01b03831660248201526044810182905261059790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610729565b505050565b6000808581526001602081815260408084208054600180830180546001600160a01b0389166001600160a01b031991821617909155600280860186905560038087018890556004808801899055600590970180549091169091179094558751928352928201879052606083018690526080830185905260a0830184905260c0830186905291917f3e5900eae50f376487f0d2272f8f857884b7457e3ca4d048f6b7abae23093cca910160405180910390a2505050505050565b6000808080806106628686610877565b60008781526001602081905260409091209094509250905060018101546001600160a01b031661069057600080fd5b8054600201546003810154600401546005909101549597949650919450925090505b9250925092565b604051636eb1769f60e11b81526001600160a01b03831660048201526024810182905260448101829052610597908490639d62ed3e60e01b9060640161058b565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107549190610890565b905061076d6001600160a01b0384168383610563565b505050565b60006020828403121561078457600080fd5b5035919050565b80356001600160a01b03811681146107a257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156107de57600080fd5b6107e78561078b565b966020860135955060408601359450606086013567ffffffffffffffff8082111561081157600080fd5b818801915088601f83011261082557600080fd5b81358181111561083757610837610a7a565b8060051b604051601f19603f8301168101818110858211171561085c5761085c610a7a565b604052828152858101935084860182860187018b101561087a57600080fd5b600095505b838610156108a257803585526001959095019493860193860161087f565b5098975050505050505050565b6000602082840312156108b757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156108e7576108e76108be565b500190565b60008160001904831182151516156109065761090661089e565b500290565b600181815b8085111561094657816000190482111561092c5761092c6108be565b8085161561093957918102915b93841c9390800290610910565b509250929050565b600082610a7557506001610a71565b81610a8257506000610a71565b81600181146109985760028114610a9f57610abb565b6001915050610a71565b60ff8411156109b0576109b06108be565b50506001821b610a71565b5060208310610133831016604e8410600b84101617156109d3575081810a610a71565b6109dd838361090b565b80600019048211156109f1576109f16108be565b029392505050565b600061070d60ff841683610a56565b634e487b7160e01b600052601260045260246000fd5b600082610a3157610a31610a16565b500490565b6000816000190483118215151615610a5057610a506108be565b500290565b600082821015610a6857610a686108be565b500390565b60008219821115610a8457610a846108be565b500190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c9b2e8a3a6a1f8f6f4a3c9b5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a5a564736f6c63430008090033";

// Interface for provider responses
export interface ChainlinkProviderResponse {
  success: boolean;
  data?: any;
  error?: string;
  txHash?: string;
  explorerUrl?: string;
}

// Interface for scheduled transfer
export interface ScheduledTransfer {
  id: string;
  recipient: string;
  amount: string;
  startTime: number;
  frequency: number;
  contractAddress: string;
}

/**
 * Initialize provider with fallback RPC URLs
 * @returns Ethers provider for Avalanche Fuji testnet
 */
export function initializeProvider(): ethers.providers.JsonRpcProvider {
  try {
    // Use the primary RPC URL from the network config
    const provider = new ethers.providers.JsonRpcProvider(AVALANCHE_FUJI_CONFIG.rpcUrl);
    
    // Test the provider connection
    provider.getBlockNumber()
      .then(() => logger.debug('Connected to primary Avalanche Fuji RPC'))
      .catch(() => {
        logger.warn('Primary RPC connection failed, switching to backup');
        // If primary fails, try the backup URL
        const backupProvider = new ethers.providers.JsonRpcProvider(
          process.env.AVALANCHE_FUJI_RPC_URL_BACKUP || 'https://api.avax-test.network/ext/bc/C/rpc'
        );
        return backupProvider;
      });
    
    return provider;
  } catch (error) {
    logger.error('Failed to initialize provider:', error);
    throw new Error('Failed to initialize Avalanche Fuji provider');
  }
}
